
%{ if eks == false ~}
aws:
  role: "${iam_role}"
%{ endif ~}

securityContext:
  runAsUser: 65534
  fsGroup: 65534

livenessProbe:
  periodSeconds: 120
  timeoutSeconds: 60

readinessProbe:
  periodSeconds: 120
  timeoutSeconds: 60

serviceAccount:
  create: true
  name: "cloud-platform-cloudwatch-exporter"
%{ if eks ~}
  annotations:
    eks.amazonaws.com/role-arn: "${eks_service_account}"
%{ endif ~}

config: |-
  # To add additional Cloudwatch metrics, please append this config list.
  region: eu-west-2
  period_seconds: 240
  set_timestamp: false
  metrics:
  # RDS Metrics
  - aws_namespace: AWS/RDS
    aws_metric_name: CPUUtilization
    aws_dimensions: [DBInstanceIdentifier]
 
  - aws_namespace: AWS/RDS
    aws_metric_name: DatabaseConnections
    aws_dimensions: [DBInstanceIdentifier]
 
  - aws_namespace: AWS/RDS
    aws_metric_name: FreeableMemory
    aws_dimensions: [DBInstanceIdentifier]

  - aws_namespace: AWS/RDS
    aws_metric_name: FreeStorageSpace
    aws_dimensions: [DBInstanceIdentifier]

  - aws_namespace: AWS/RDS
    aws_metric_name: ReadIOPS
    aws_dimensions: [DBInstanceIdentifier]
 
  - aws_namespace: AWS/RDS
    aws_metric_name: ReadLatency
    aws_dimensions: [DBInstanceIdentifier]

  - aws_namespace: AWS/RDS
    aws_metric_name: WriteIOPS
    aws_dimensions: [DBInstanceIdentifier]

  - aws_namespace: AWS/RDS
    aws_metric_name: WriteLatency
    aws_dimensions: [DBInstanceIdentifier]

    # S3 Metrics
  - aws_namespace: AWS/S3
    aws_metric_name: BucketSizeBytes
    aws_dimensions: [BucketName, StorageType]
 
  - aws_namespace: AWS/S3
    aws_metric_name: NumberOfObjects
    aws_dimensions: [BucketName, StorageType]

    # SQS Metrics
  - aws_namespace: AWS/SQS
    aws_metric_name: ApproximateAgeOfOldestMessage
    aws_dimensions: [QueueName]

  - aws_namespace: AWS/SQS
    aws_metric_name: ApproximateNumberOfMessagesDelayed
    aws_dimensions: [QueueName]

  - aws_namespace: AWS/SQS
    aws_metric_name: ApproximateNumberOfMessagesNotVisible
    aws_dimensions: [QueueName]

  - aws_namespace: AWS/SQS
    aws_metric_name: ApproximateNumberOfMessagesVisible
    aws_dimensions: [QueueName]

  - aws_namespace: AWS/SQS
    aws_metric_name: NumberOfEmptyReceives
    aws_dimensions: [QueueName]

  - aws_namespace: AWS/SQS
    aws_metric_name: NumberOfMessagesDeleted
    aws_dimensions: [QueueName]

  - aws_namespace: AWS/SQS
    aws_metric_name: NumberOfMessagesReceived
    aws_dimensions: [QueueName]

  - aws_namespace: AWS/SQS
    aws_metric_name: NumberOfMessagesSent
    aws_dimensions: [QueueName]

  - aws_namespace: AWS/SQS
    aws_metric_name: SentMessageSize
    aws_dimensions: [QueueName]
    
    # SNS Metrics
  - aws_namespace: AWS/SNS
    aws_metric_name: NumberOfMessagesPublished
    aws_dimensions: [TopicName]

  - aws_namespace: AWS/SNS
    aws_metric_name: NumberOfNotificationsDelivered 
    aws_dimensions: [TopicName]

  - aws_namespace: AWS/SNS
    aws_metric_name: NumberOfNotificationsFailed 
    aws_dimensions: [TopicName]

  - aws_namespace: AWS/SNS
    aws_metric_name: NumberOfNotificationsFilteredOut
    aws_dimensions: [TopicName]

  - aws_namespace: AWS/SNS
    aws_metric_name: NumberOfNotificationsFilteredOut-NoMessageAttributes
    aws_dimensions: [TopicName]

  - aws_namespace: AWS/SNS
    aws_metric_name: NumberOfNotificationsFilteredOut-InvalidAttributes
    aws_dimensions: [TopicName]
    
  - aws_namespace: AWS/SNS
    aws_metric_name: PublishSize
    aws_dimensions: [TopicName]

    # ElastiCache Redis Metrics
  - aws_namespace: AWS/ElastiCache
    aws_metric_name: CPUUtilization

  - aws_namespace: AWS/ElastiCache
    aws_metric_name: FreeableMemory
 
  - aws_namespace: AWS/ElastiCache
    aws_metric_name: NetworkBytesIn

  - aws_namespace: AWS/ElastiCache
    aws_metric_name: NetworkBytesOut
 
  - aws_namespace: AWS/ElastiCache
    aws_metric_name: NetworkPacketsIn
 
  - aws_namespace: AWS/ElastiCache
    aws_metric_name: NetworkPacketsOut
 
    # DynamoDB Metrics   
  - aws_namespace: AWS/DynamoDB
    aws_metric_name: SuccessfulRequestLatency
    aws_dimensions: ["TableName","Operation"]

  - aws_namespace: AWS/DynamoDB
    aws_metric_name: ThrottledRequests
    aws_dimensions: ["TableName","Operation"]

    # MQ Broker Metrics
  - aws_namespace: AWS/AmazonMQ
    aws_metric_name: CpuUtilization
    aws_dimensions: [Broker]

  - aws_namespace: AWS/AmazonMQ
    aws_metric_name: CurrentConnectionsCount
    aws_dimensions: [Broker]

  - aws_namespace: AWS/AmazonMQ
    aws_metric_name: OpenTransactionCount
    aws_dimensions: [Broker]
 
  - aws_namespace: AWS/AmazonMQ
    aws_metric_name: StorePercentUsage
    aws_dimensions: [Broker]

  - aws_namespace: AWS/AmazonMQ
    aws_metric_name: TotalConsumerCount
    aws_dimensions: [Broker]
 
  - aws_namespace: AWS/AmazonMQ
    aws_metric_name: TotalMessageCount
    aws_dimensions: [Broker]
 
  - aws_namespace: AWS/AmazonMQ
    aws_metric_name: TotalProducerCount
    aws_dimensions: [Broker] 

  # Elasticsearch Metrics
  - aws_namespace: AWS/ES
    aws_metric_name: ClusterStatus.green
    aws_dimensions: [DomainName,ClientId]
    
  - aws_namespace: AWS/ES
    aws_metric_name: ClusterStatus.yellow
    aws_dimensions: [DomainName,ClientId]

  - aws_namespace: AWS/ES
    aws_metric_name: ClusterStatus.red
    aws_dimensions: [DomainName,ClientId]

  - aws_namespace: AWS/ES
    aws_metric_name: FreeStorageSpace
    aws_dimensions: [DomainName, ClientId]

  - aws_namespace: AWS/ES
    aws_metric_name: SearchableDocuments
    aws_dimensions: [DomainName, ClientId]

  - aws_namespace: AWS/ES
    aws_metric_name: CPUUtilization
    aws_dimensions: [DomainName, ClientId]

  - aws_namespace: AWS/ES
    aws_metric_name: JVMMemoryPressure
    aws_dimensions: [DomainName, ClientId]

  - aws_namespace: AWS/ES
    aws_metric_name: ClusterIndexWritesBlocked
    aws_dimensions: [DomainName, ClientId]

  - aws_namespace: AWS/ES
    aws_metric_name: AutomatedSnapshotFailure
    aws_dimensions: [DomainName, ClientId]


serviceMonitor:
  # When set true then use a ServiceMonitor to configure scraping
  enabled: true
  # Set the namespace the ServiceMonitor should be deployed
  namespace: monitoring
  # Set how frequently Prometheus should scrape
  interval: 240s
  # Set path to cloudwatch-exporter telemtery-path
  telemetryPath: /metrics
  # Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator
  labels:
    app: prometheus-cloudwatch-exporter
  # Set timeout for scrape
  timeout: 180s
